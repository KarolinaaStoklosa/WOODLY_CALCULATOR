import React from 'react';
import { ProjectProvider, useProject } from './context/ProjectContext';
import Layout from './components/layout/Layout';

// Import sekcji
import KorpusyTable from './components/sections/KorpusyTable';
import SzufladyTable from './components/sections/SzufladyTable';
import WidocznyBokTable from './components/sections/WidocznyBokTable';
import DrzwiPrzesuwneTable from './components/sections/DrzwiPrzesuwneTable';
import UchwytyTable from './components/sections/UchwytyTable';
import ZawiasyTable from './components/sections/ZawiasyTable';
import PodnosnikiTable from './components/sections/PodnosnikiTable';
import BlatyTable from './components/sections/BlatyTable';
import AkcesoriaTable from './components/sections/AkcesoriaTable';
import SummaryDashboard from './components/sections/SummaryDashboard';
import ProjectSetupForm from './components/sections/ProjectSetupForm';
import CalculationSection from './components/sections/CalculationSection';
import CompanySettings from './components/sections/CompanySettings';

function App() {
  // üìã SEKCJE KALKULATORA
  const sections = {
    companySettings: {
      title: 'üè¢ Dane Firmy',
      component: CompanySettings, 
      icon: 'üè¢'
    },
    projectSetup: {
      title: 'üìÇ Dane projektu',
      component: ProjectSetupForm, 
      icon: 'üìÇ'
    },
    calculation: {
      title: 'üßÆ Kalkulacja G≈Ç√≥wna',
      component: KorpusyTable, // lub g≈Ç√≥wny dashboard
      icon: 'üßÆ'
    },
    szafki: {
      title: 'üì¶ Szafki/Korpusy',
      component: KorpusyTable,
      icon: 'üì¶'
    },
    szuflady: {
      title: 'üóÇÔ∏è Szuflady', 
      component: SzufladyTable,
      icon: 'üóÇÔ∏è'
    },
    widocznyBok: {
      title: 'üëÅÔ∏è Widoczny Bok',
      component: WidocznyBokTable, 
      icon: 'üëÅÔ∏è'
    },
    drzwiPrzesuwne: {
      title: 'üö™ Drzwi Przesuwne',
      component: DrzwiPrzesuwneTable,
      icon: 'üö™'
    },
    uchwyty: {
      title: 'üîß Uchwyty',
      component: UchwytyTable,
      icon: 'üîß'
    },
    zawiasy: {
      title: 'üîó Zawiasy',
      component: ZawiasyTable,
      icon: 'üîó'
    },
    podnosniki: {
      title: '‚¨ÜÔ∏è Podno≈õniki',
      component: PodnosnikiTable,
      icon: '‚¨ÜÔ∏è'
    },
    blaty: {
      title: 'üèîÔ∏è Blaty',
      component: BlatyTable,
      icon: 'üèîÔ∏è'
    },
    akcesoria: {
      title: 'üõ†Ô∏è Akcesoria',
      component: AkcesoriaTable, 
      icon: 'üõ†Ô∏è'
    },
    kalkulacja: {
      title: 'üí∞ Pozosta≈Çe koszty',
      component: CalculationSection, 
      icon: 'üí∞'
    },
    podsumowanie: {
      title: 'üìä Podsumowanie',
      component: SummaryDashboard,
      icon: 'üìä'
    },
    // DODATKOWE SEKCJE Z NAWIGACJI
    offers: {
      title: 'üìÑ Oferty',
      component: () => <div className="p-6">Sekcja Oferty - do zaimplementowania</div>,
      icon: 'üìÑ'
    },
    archive: {
      title: 'üì¶ Archiwum',
      component: () => <div className="p-6">Sekcja Archiwum - do zaimplementowania</div>,
      icon: 'üì¶'
    },
    analytics: {
      title: 'üìä Analityka',
      component: () => <div className="p-6">Sekcja Analityka - do zaimplementowania</div>,
      icon: 'üìä'
    },
    settings: {
      title: '‚öôÔ∏è Ustawienia',
      component: () => <div className="p-6">Sekcja Ustawienia - do zaimplementowania</div>,
      icon: '‚öôÔ∏è'
    }
  };

  return (
    <ProjectProvider>
      <Layout>
        
        {({ activeTab, setActiveTab }) => {
        
          // BEZPIECZNE wybieranie komponentu
          const activeSection = sections[activeTab] || sections.szafki || {
            title: 'üì¶ Szafki/Korpusy',
            component: () => <div className="p-6">Nieznana sekcja</div>,
            icon: 'üì¶'
          };
          
          const ActiveComponent = activeSection.component;

          return (
            <>
              <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700">
                {/* Specjalna obs≈Çuga dla ProjectSetupForm */}
                {activeTab === 'projectSetup' ? (
                  <ProjectSetupForm 
                    onComplete={(formData) => {
                      console.log('Dane projektu:', formData);
                      setActiveTab('szafki');
                    }}
                    setActiveTab={setActiveTab}
                  />
                ) : (
                  <ActiveComponent />
                )}
              </div>

              {/* Footer z statusem projektu - tylko dla sekcji kalkulatora */}
              {['szafki', 'szuflady', 'widocznyBok', 'drzwiPrzesuwne', 'uchwyty', 'zawiasy', 'podnosniki', 'blaty', 'akcesoria', 'podsumowanie'].includes(activeTab) && (
                <ProjectStatusFooter />
              )}
            </>
          );
        }}
      </Layout>
    </ProjectProvider>
  );
}

// üìä PROJECT STATUS FOOTER - NAPRAWIONY
const ProjectStatusFooter = () => {
  const { projectData, calculations, calculateGrandTotal } = useProject();

  // üí∞ Obliczamy warto≈õƒá ca≈ÇkowitƒÖ
  const grandTotal = calculateGrandTotal ? calculateGrandTotal() : 0;

  // üìä Bezpieczne pobieranie nazwy projektu
  const projectName = projectData?.name || 'Nowy Projekt';

  return (
    <div className="mt-6 p-4 bg-gray-50 dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700">
      <div className="flex items-center justify-between text-sm">
        <div className="flex items-center gap-6">
          <span className="text-gray-600 dark:text-gray-400">
            üìÇ Projekt: <span className="font-medium text-gray-900 dark:text-gray-50">
              {projectName}
            </span>
          </span>
        </div>

        <div className="flex items-center gap-6">
          <span className="text-gray-600 dark:text-gray-400">
            üí∞ Warto≈õƒá: <span className="font-mono font-bold text-green-600">
              {grandTotal.toFixed(2)} z≈Ç
            </span>
          </span>
        </div>
      </div>
    </div>
  );
};

export default App;